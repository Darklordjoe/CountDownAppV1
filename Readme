# Cool Countdown Timer Web App

A sleek, single-page web application to create, track, and manage countdowns with persistent state.

## Features

*   **Date & Time Selection:** Choose specific start and end dates and times for your countdown.
*   **"Now" Buttons:** Quickly set the start or end date/time to the current moment.
*   **Duration Calculation:** Calculates the total duration between the selected start and end dates (Months, Weeks, Days, Hours, Minutes, Seconds).
*   **Live Countdown:**
    *   Displays remaining time in a large, central format (Days, Hours, Minutes, Seconds).
    *   Shows detailed breakdown of elapsed time (Months, Weeks, Days, H:M:S).
    *   Shows detailed breakdown of remaining time (Months, Weeks, Days, H:M:S).
*   **Persistent State:** Uses `localStorage` to remember your countdown settings (start/end dates) and whether the timer was running, even if you close the browser or refresh the page. The countdown will automatically resume if it was active.
*   **Controls:**
    *   **Start:** Begins the live countdown.
    *   **Completed:** Manually stops the timer and shows the time remaining at the point of stopping.
    *   **Reset:** Clears all dates, timers, and stored data, returning the app to its initial state.
*   **Responsive Design:** Adapts to different screen sizes for a good experience on desktop and mobile.
*   **Cool UI:** Styled with CSS gradients, custom fonts, and a modern look.

## Screenshots

*(Optional: Add screenshots of your application here)*

*   *Example: Input Section*
    `!Input Section`
*   *Example: Running Countdown*
    `!Running Countdown`

## Technologies Used

*   HTML5
*   CSS3 (including Flexbox, Grid, Variables, Gradients, Animations)
*   Vanilla JavaScript (ES6+)
*   `localStorage` for persistence

## Setup and Usage

**1. Running Locally:**

*   Clone the repository:
    ```bash
    git clone https://github.com/YOUR_USERNAME/YOUR_REPOSITORY_NAME.git
    ```
*   Navigate to the project directory:
    ```bash
    cd YOUR_REPOSITORY_NAME
    ```
*   Open the `index.html` file in your web browser.

**2. Using the App:**

*   **Set Dates:** Use the date/time pickers to select a "Start Date & Time" and an "End Date & Time". The end date must be after the start date. Use the "Now" buttons for convenience.
*   **Calculate:** Click the "Calculate Duration" button. This will display the total time span of your countdown.
*   **Start:** Click the "Start Countdown" button (enabled after calculation). The live display sections will appear, and the timer will begin.
*   **Monitor:** Observe the elapsed time, remaining time (large display), and detailed remaining breakdown.
*   **Complete:** If you want to stop the timer before it finishes naturally, click the "Completed" button. The timer stops, and the final state is displayed.
*   **Reset:** Click the "Reset" button at any time to clear everything and start over.

## Deployment to GitHub Pages (Free Hosting)

1.  **Create GitHub Repo:** Create a new **public** repository on GitHub.
2.  **Push Code:** Upload/push the `index.html`, `style.css`, and `script.js` files to the repository (either via drag-and-drop on the GitHub website or using Git commands).
3.  **Enable Pages:**
    *   Go to your repository's "Settings" tab.
    *   Select "Pages" from the left sidebar.
    *   Under "Build and deployment" > "Source", select "Deploy from a branch".
    *   Under "Branch", choose your main branch (e.g., `main`), keep the folder as `/ (root)`, and click "Save".
4.  **Wait & Access:** Wait a minute or two for GitHub to build and deploy your site. The live URL will appear on the same "Pages" settings screen.

## License

*(Optional: Choose a license if you wish, e.g., MIT)*

This project is open source and available under the MIT License. *(If you add a license file)*
